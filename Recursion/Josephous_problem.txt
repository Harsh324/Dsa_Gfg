## Joshephous Problem 

    # Problem says that there are N people standing in circle,
      we need to kill kth person in every iteration this has,
      to be done in circular order. After repeatedly doing this,
      we are to find position of survivor.


    I/P : N = 7, K = 3;
    O/P : 3;

    I/P : N = 4, K = 2;
    O/P : 0;

    I/P : N = 5, K = 3;
    O/P : 3;

    int Joseph(int N, int K)
    {
        if(N == 1)
            return 0;
        return (Joseph(N - 1, K) + k) % N;
    }


    Recurrence relation : T(n) = T(n - 1) + c
    Time complexity : Theta(n)


    ## If Number starts from 1 

    int Joseph(int N, int K)
    {
        if(N == 1)
            return 0;
        return (Joseph(N - 1, K) + k) % N;
    }

    int Joseph1(int N, int K)
    {
        return Joseph1(N, K) + 1;
    }